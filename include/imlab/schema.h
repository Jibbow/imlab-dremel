// ---------------------------------------------------------------------------
// This file is auto-generated.
// Do not edit this file directly.
// ---------------------------------------------------------------------------
#ifndef INCLUDE_IMLAB_SCHEMA_H_
#define INCLUDE_IMLAB_SCHEMA_H_
// ---------------------------------------------------------------------------
#include <optional>
#include <vector>
#include "imlab/schema_types.h"
#include "imlab/infra/dremel.h"
#include "imlab/infra/types.h"
#include "imlab/algebra/iu.h"
// ---------------------------------------------------------------------------
namespace imlab {
namespace schema {
// ---------------------------------------------------------------------------
using namespace dremel;

class DocumentTable : public TableBase {
 public:
    /// Insert a new record into the table.
    uint64_t insert(Document& record);
    static std::vector<const IU*> get_ius();

 private:
    DremelColumn<Integer> DocId { "DocId", 0 };
    std::vector<uint64_t> DocId_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Integer> Links_Backward { "Links.Backward", 2 };
    std::vector<uint64_t> Links_Backward_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Integer> Links_Forward { "Links.Forward", 2 };
    std::vector<uint64_t> Links_Forward_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Varchar<30>> Name_Language_Code { "Name.Language.Code", 2 };
    std::vector<uint64_t> Name_Language_Code_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Varchar<30>> Name_Language_Country { "Name.Language.Country", 3 };
    std::vector<uint64_t> Name_Language_Country_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Varchar<30>> Name_Url { "Name.Url", 2 };
    std::vector<uint64_t> Name_Url_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    static const std::vector<IU> IUs;
};

// ---------------------------------------------------------------------------
}  // namespace schema
}  // namespace imlab
// ---------------------------------------------------------------------------
#endif  // INCLUDE_IMLAB_SCHEMA_H_
// ---------------------------------------------------------------------------
