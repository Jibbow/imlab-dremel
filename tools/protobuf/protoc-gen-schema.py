#!/usr/bin/env python

import sys
import io
import itertools
import json
from google.protobuf.compiler import plugin_pb2
from google.protobuf.descriptor_pb2 import DescriptorProto, EnumDescriptorProto


def generate_header():
    yield '// ---------------------------------------------------------------------------\n'
    yield '// This file is auto-generated.\n'
    yield '// Do not edit this file directly.\n'
    yield '// ---------------------------------------------------------------------------\n'
    yield '\n'
    yield '#ifndef INCLUDE_IMLAB_SCHEMA_H_\n'
    yield '#define INCLUDE_IMLAB_SCHEMA_H_\n'
    yield '\n'
    yield 'namespace imlab {\n'
    yield 'namespace schema {\n'

    yield '}  // namespace schema\n'
    yield '}  // namespace imlab\n'
    yield '#endif  // INCLUDE_IMLAB_SCHEMA_H_\n'


def generate_source():
    yield '// ---------------------------------------------------------------------------\n'
    yield '// This file is auto-generated.\n'
    yield '// Do not edit this file directly.\n'
    yield '// ---------------------------------------------------------------------------\n'
    yield '\n'
    yield '#include "imlab/schema.h"\n'
    yield '\n'
    yield 'namespace imlab {\n'
    yield 'namespace schema {\n'

    yield '}  // namespace schema\n'
    yield '}  // namespace imlab\n'


def generate_code(request, response):
    for fdesc in request.proto_file:
        headerdata = ''.join(generate_header())
        sourcedata = ''.join(generate_source())

        f = response.file.add()
        f.name = 'schema.h'
        f.content = headerdata

        f = response.file.add()
        f.name = 'schema.cc'
        f.content = sourcedata


if __name__ == '__main__':
    # Read request message from stdin
    data = io.open(sys.stdin.fileno(), "rb").read()

    # Parse request
    request = plugin_pb2.CodeGeneratorRequest.FromString(data)

    # Create response
    response = plugin_pb2.CodeGeneratorResponse()

    # Generate code
    generate_code(request, response)

    # Write to stdout
    io.open(sys.stdout.fileno(), "wb").write(response.SerializeToString())
