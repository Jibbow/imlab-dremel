// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.proto

#ifndef PROTOBUF_schema_2eproto__INCLUDED
#define PROTOBUF_schema_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_schema_2eproto();
void protobuf_AssignDesc_schema_2eproto();
void protobuf_ShutdownFile_schema_2eproto();

class Document;
class Document_Links;
class Document_Name;
class Document_Name_Language;

// ===================================================================

class Document_Links : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Document.Links) */ {
 public:
  Document_Links();
  virtual ~Document_Links();

  Document_Links(const Document_Links& from);

  inline Document_Links& operator=(const Document_Links& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Document_Links& default_instance();

  void Swap(Document_Links* other);

  // implements Message ----------------------------------------------

  inline Document_Links* New() const { return New(NULL); }

  Document_Links* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Document_Links& from);
  void MergeFrom(const Document_Links& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Document_Links* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 Backward = 3;
  int backward_size() const;
  void clear_backward();
  static const int kBackwardFieldNumber = 3;
  ::google::protobuf::int64 backward(int index) const;
  void set_backward(int index, ::google::protobuf::int64 value);
  void add_backward(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      backward() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_backward();

  // repeated int64 Forward = 4;
  int forward_size() const;
  void clear_forward();
  static const int kForwardFieldNumber = 4;
  ::google::protobuf::int64 forward(int index) const;
  void set_forward(int index, ::google::protobuf::int64 value);
  void add_forward(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      forward() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_forward();

  // @@protoc_insertion_point(class_scope:Document.Links)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > backward_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > forward_;
  friend void  protobuf_AddDesc_schema_2eproto();
  friend void protobuf_AssignDesc_schema_2eproto();
  friend void protobuf_ShutdownFile_schema_2eproto();

  void InitAsDefaultInstance();
  static Document_Links* default_instance_;
};
// -------------------------------------------------------------------

class Document_Name_Language : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Document.Name.Language) */ {
 public:
  Document_Name_Language();
  virtual ~Document_Name_Language();

  Document_Name_Language(const Document_Name_Language& from);

  inline Document_Name_Language& operator=(const Document_Name_Language& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Document_Name_Language& default_instance();

  void Swap(Document_Name_Language* other);

  // implements Message ----------------------------------------------

  inline Document_Name_Language* New() const { return New(NULL); }

  Document_Name_Language* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Document_Name_Language& from);
  void MergeFrom(const Document_Name_Language& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Document_Name_Language* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Code = 7;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 7;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // optional string Country = 8;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 8;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // @@protoc_insertion_point(class_scope:Document.Name.Language)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_country();
  inline void clear_has_country();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  friend void  protobuf_AddDesc_schema_2eproto();
  friend void protobuf_AssignDesc_schema_2eproto();
  friend void protobuf_ShutdownFile_schema_2eproto();

  void InitAsDefaultInstance();
  static Document_Name_Language* default_instance_;
};
// -------------------------------------------------------------------

class Document_Name : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Document.Name) */ {
 public:
  Document_Name();
  virtual ~Document_Name();

  Document_Name(const Document_Name& from);

  inline Document_Name& operator=(const Document_Name& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Document_Name& default_instance();

  void Swap(Document_Name* other);

  // implements Message ----------------------------------------------

  inline Document_Name* New() const { return New(NULL); }

  Document_Name* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Document_Name& from);
  void MergeFrom(const Document_Name& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Document_Name* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Document_Name_Language Language;

  // accessors -------------------------------------------------------

  // repeated group Language = 6 { ... };
  int language_size() const;
  void clear_language();
  static const int kLanguageFieldNumber = 6;
  const ::Document_Name_Language& language(int index) const;
  ::Document_Name_Language* mutable_language(int index);
  ::Document_Name_Language* add_language();
  ::google::protobuf::RepeatedPtrField< ::Document_Name_Language >*
      mutable_language();
  const ::google::protobuf::RepeatedPtrField< ::Document_Name_Language >&
      language() const;

  // optional string Url = 9;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 9;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:Document.Name)
 private:
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Document_Name_Language > language_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend void  protobuf_AddDesc_schema_2eproto();
  friend void protobuf_AssignDesc_schema_2eproto();
  friend void protobuf_ShutdownFile_schema_2eproto();

  void InitAsDefaultInstance();
  static Document_Name* default_instance_;
};
// -------------------------------------------------------------------

class Document : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Document) */ {
 public:
  Document();
  virtual ~Document();

  Document(const Document& from);

  inline Document& operator=(const Document& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Document& default_instance();

  void Swap(Document* other);

  // implements Message ----------------------------------------------

  inline Document* New() const { return New(NULL); }

  Document* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Document& from);
  void MergeFrom(const Document& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Document* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Document_Links Links;
  typedef Document_Name Name;

  // accessors -------------------------------------------------------

  // required int64 DocId = 1;
  bool has_docid() const;
  void clear_docid();
  static const int kDocIdFieldNumber = 1;
  ::google::protobuf::int64 docid() const;
  void set_docid(::google::protobuf::int64 value);

  // optional group Links = 2 { ... };
  bool has_links() const;
  void clear_links();
  static const int kLinksFieldNumber = 2;
  const ::Document_Links& links() const;
  ::Document_Links* mutable_links();
  ::Document_Links* release_links();
  void set_allocated_links(::Document_Links* links);

  // repeated group Name = 5 { ... };
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::Document_Name& name(int index) const;
  ::Document_Name* mutable_name(int index);
  ::Document_Name* add_name();
  ::google::protobuf::RepeatedPtrField< ::Document_Name >*
      mutable_name();
  const ::google::protobuf::RepeatedPtrField< ::Document_Name >&
      name() const;

  // @@protoc_insertion_point(class_scope:Document)
 private:
  inline void set_has_docid();
  inline void clear_has_docid();
  inline void set_has_links();
  inline void clear_has_links();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 docid_;
  ::Document_Links* links_;
  ::google::protobuf::RepeatedPtrField< ::Document_Name > name_;
  friend void  protobuf_AddDesc_schema_2eproto();
  friend void protobuf_AssignDesc_schema_2eproto();
  friend void protobuf_ShutdownFile_schema_2eproto();

  void InitAsDefaultInstance();
  static Document* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Document_Links

// repeated int64 Backward = 3;
inline int Document_Links::backward_size() const {
  return backward_.size();
}
inline void Document_Links::clear_backward() {
  backward_.Clear();
}
inline ::google::protobuf::int64 Document_Links::backward(int index) const {
  // @@protoc_insertion_point(field_get:Document.Links.Backward)
  return backward_.Get(index);
}
inline void Document_Links::set_backward(int index, ::google::protobuf::int64 value) {
  backward_.Set(index, value);
  // @@protoc_insertion_point(field_set:Document.Links.Backward)
}
inline void Document_Links::add_backward(::google::protobuf::int64 value) {
  backward_.Add(value);
  // @@protoc_insertion_point(field_add:Document.Links.Backward)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Document_Links::backward() const {
  // @@protoc_insertion_point(field_list:Document.Links.Backward)
  return backward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Document_Links::mutable_backward() {
  // @@protoc_insertion_point(field_mutable_list:Document.Links.Backward)
  return &backward_;
}

// repeated int64 Forward = 4;
inline int Document_Links::forward_size() const {
  return forward_.size();
}
inline void Document_Links::clear_forward() {
  forward_.Clear();
}
inline ::google::protobuf::int64 Document_Links::forward(int index) const {
  // @@protoc_insertion_point(field_get:Document.Links.Forward)
  return forward_.Get(index);
}
inline void Document_Links::set_forward(int index, ::google::protobuf::int64 value) {
  forward_.Set(index, value);
  // @@protoc_insertion_point(field_set:Document.Links.Forward)
}
inline void Document_Links::add_forward(::google::protobuf::int64 value) {
  forward_.Add(value);
  // @@protoc_insertion_point(field_add:Document.Links.Forward)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Document_Links::forward() const {
  // @@protoc_insertion_point(field_list:Document.Links.Forward)
  return forward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Document_Links::mutable_forward() {
  // @@protoc_insertion_point(field_mutable_list:Document.Links.Forward)
  return &forward_;
}

// -------------------------------------------------------------------

// Document_Name_Language

// required string Code = 7;
inline bool Document_Name_Language::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Document_Name_Language::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Document_Name_Language::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Document_Name_Language::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& Document_Name_Language::code() const {
  // @@protoc_insertion_point(field_get:Document.Name.Language.Code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Document_Name_Language::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Document.Name.Language.Code)
}
inline void Document_Name_Language::set_code(const char* value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Document.Name.Language.Code)
}
inline void Document_Name_Language::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Document.Name.Language.Code)
}
inline ::std::string* Document_Name_Language::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:Document.Name.Language.Code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Document_Name_Language::release_code() {
  // @@protoc_insertion_point(field_release:Document.Name.Language.Code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Document_Name_Language::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:Document.Name.Language.Code)
}

// optional string Country = 8;
inline bool Document_Name_Language::has_country() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Document_Name_Language::set_has_country() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Document_Name_Language::clear_has_country() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Document_Name_Language::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& Document_Name_Language::country() const {
  // @@protoc_insertion_point(field_get:Document.Name.Language.Country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Document_Name_Language::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Document.Name.Language.Country)
}
inline void Document_Name_Language::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Document.Name.Language.Country)
}
inline void Document_Name_Language::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Document.Name.Language.Country)
}
inline ::std::string* Document_Name_Language::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:Document.Name.Language.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Document_Name_Language::release_country() {
  // @@protoc_insertion_point(field_release:Document.Name.Language.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Document_Name_Language::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:Document.Name.Language.Country)
}

// -------------------------------------------------------------------

// Document_Name

// repeated group Language = 6 { ... };
inline int Document_Name::language_size() const {
  return language_.size();
}
inline void Document_Name::clear_language() {
  language_.Clear();
}
inline const ::Document_Name_Language& Document_Name::language(int index) const {
  // @@protoc_insertion_point(field_get:Document.Name.language)
  return language_.Get(index);
}
inline ::Document_Name_Language* Document_Name::mutable_language(int index) {
  // @@protoc_insertion_point(field_mutable:Document.Name.language)
  return language_.Mutable(index);
}
inline ::Document_Name_Language* Document_Name::add_language() {
  // @@protoc_insertion_point(field_add:Document.Name.language)
  return language_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Document_Name_Language >*
Document_Name::mutable_language() {
  // @@protoc_insertion_point(field_mutable_list:Document.Name.language)
  return &language_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Document_Name_Language >&
Document_Name::language() const {
  // @@protoc_insertion_point(field_list:Document.Name.language)
  return language_;
}

// optional string Url = 9;
inline bool Document_Name::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Document_Name::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Document_Name::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Document_Name::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& Document_Name::url() const {
  // @@protoc_insertion_point(field_get:Document.Name.Url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Document_Name::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Document.Name.Url)
}
inline void Document_Name::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Document.Name.Url)
}
inline void Document_Name::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Document.Name.Url)
}
inline ::std::string* Document_Name::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:Document.Name.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Document_Name::release_url() {
  // @@protoc_insertion_point(field_release:Document.Name.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Document_Name::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:Document.Name.Url)
}

// -------------------------------------------------------------------

// Document

// required int64 DocId = 1;
inline bool Document::has_docid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Document::set_has_docid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Document::clear_has_docid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Document::clear_docid() {
  docid_ = GOOGLE_LONGLONG(0);
  clear_has_docid();
}
inline ::google::protobuf::int64 Document::docid() const {
  // @@protoc_insertion_point(field_get:Document.DocId)
  return docid_;
}
inline void Document::set_docid(::google::protobuf::int64 value) {
  set_has_docid();
  docid_ = value;
  // @@protoc_insertion_point(field_set:Document.DocId)
}

// optional group Links = 2 { ... };
inline bool Document::has_links() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Document::set_has_links() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Document::clear_has_links() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Document::clear_links() {
  if (links_ != NULL) links_->::Document_Links::Clear();
  clear_has_links();
}
inline const ::Document_Links& Document::links() const {
  // @@protoc_insertion_point(field_get:Document.links)
  return links_ != NULL ? *links_ : *default_instance_->links_;
}
inline ::Document_Links* Document::mutable_links() {
  set_has_links();
  if (links_ == NULL) {
    links_ = new ::Document_Links;
  }
  // @@protoc_insertion_point(field_mutable:Document.links)
  return links_;
}
inline ::Document_Links* Document::release_links() {
  // @@protoc_insertion_point(field_release:Document.links)
  clear_has_links();
  ::Document_Links* temp = links_;
  links_ = NULL;
  return temp;
}
inline void Document::set_allocated_links(::Document_Links* links) {
  delete links_;
  links_ = links;
  if (links) {
    set_has_links();
  } else {
    clear_has_links();
  }
  // @@protoc_insertion_point(field_set_allocated:Document.links)
}

// repeated group Name = 5 { ... };
inline int Document::name_size() const {
  return name_.size();
}
inline void Document::clear_name() {
  name_.Clear();
}
inline const ::Document_Name& Document::name(int index) const {
  // @@protoc_insertion_point(field_get:Document.name)
  return name_.Get(index);
}
inline ::Document_Name* Document::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:Document.name)
  return name_.Mutable(index);
}
inline ::Document_Name* Document::add_name() {
  // @@protoc_insertion_point(field_add:Document.name)
  return name_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Document_Name >*
Document::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:Document.name)
  return &name_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Document_Name >&
Document::name() const {
  // @@protoc_insertion_point(field_list:Document.name)
  return name_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_schema_2eproto__INCLUDED
