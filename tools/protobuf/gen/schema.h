// ---------------------------------------------------------------------------
// This file is auto-generated.
// Do not edit this file directly.
// ---------------------------------------------------------------------------
#ifndef INCLUDE_IMLAB_SCHEMA_H_
#define INCLUDE_IMLAB_SCHEMA_H_
// ---------------------------------------------------------------------------
#include <optional>
#include <vector>
#include "./schema.pb.h"
#include "imlab/dremel/storage.h"
#include "imlab/dremel/field_writer.h"
#include "imlab/infra/types.h"
#include "imlab/algebra/iu.h"
// ---------------------------------------------------------------------------
namespace imlab {
namespace schema {
// ---------------------------------------------------------------------------
using namespace dremel;

class DocumentTable : public TableBase {
 public:
    /// Insert a new record into the table.
    uint64_t insert(Document& record);
    /// Get the corresponding FieldWriter-tree for this table.
    FieldWriter* get_record_writer() override { return &Document_Writer; }
    /// Get a reference to the IUs in this table.
    static std::vector<const IU*> get_ius();

 protected:
    DremelColumn<Integer> DocId { "DocId", 0 };
    std::vector<uint64_t> DocId_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Integer> Links_Backward { "Links.Backward", 2 };
    std::vector<uint64_t> Links_Backward_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Integer> Links_Forward { "Links.Forward", 2 };
    std::vector<uint64_t> Links_Forward_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Varchar<30>> Name_Language_Code { "Name.Language.Code", 2 };
    std::vector<uint64_t> Name_Language_Code_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Varchar<30>> Name_Language_Country { "Name.Language.Country", 3 };
    std::vector<uint64_t> Name_Language_Country_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    DremelColumn<Varchar<30>> Name_Url { "Name.Url", 2 };
    std::vector<uint64_t> Name_Url_Record_TIDs;  // Maps the beginning of a record to a TID in the column.

    // A tree-like structure of FieldWriters
    AtomicFieldWriter<Integer> DocId_Writer { 0, 0, 1, &DocId };
    AtomicFieldWriter<Integer> Links_Backward_Writer { 2, 1, 3, &Links_Backward };
    AtomicFieldWriter<Integer> Links_Forward_Writer { 2, 1, 4, &Links_Forward };
    AtomicFieldWriter<Varchar<30>> Name_Language_Code_Writer { 2, 2, 7, &Name_Language_Code };
    AtomicFieldWriter<Varchar<30>> Name_Language_Country_Writer { 3, 2, 8, &Name_Language_Country };
    AtomicFieldWriter<Varchar<30>> Name_Url_Writer { 2, 1, 9, &Name_Url };
    ComplexFieldWriter Document_Writer { 0, 0, 0, { &DocId_Writer, &Links_Writer, &Name_Writer } };
    ComplexFieldWriter Links_Writer { 1, 0, 2, { &Links_Backward_Writer, &Links_Forward_Writer } };
    ComplexFieldWriter Name_Writer { 1, 1, 5, { &Name_Language_Writer, &Name_Url_Writer } };
    ComplexFieldWriter Name_Language_Writer { 2, 2, 6, { &Name_Language_Code_Writer, &Name_Language_Country_Writer } };

    static const std::vector<IU> IUs;
};

// ---------------------------------------------------------------------------
}  // namespace schema
}  // namespace imlab
// ---------------------------------------------------------------------------
#endif  // INCLUDE_IMLAB_SCHEMA_H_
// ---------------------------------------------------------------------------
